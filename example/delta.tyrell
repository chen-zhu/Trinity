# First, specify the types that will be used
enum ColInt {
  "1","2","3","4","5","6"
}

enum ColNegInt {
  "-1","-2","-3","-4","-5","-6"
}

enum SmallInt {
  "0", "1", "2", "3", "4", "5", "6"
}

enumset ColList[2] {
  "1","2","3","4","5","6"
}

enumset ColNegList[2] {
  "-1","-2","-3","-4","-5","-6"
}

enum Aggr {
  "min", "max", "sum", "mean"
}

enum NumFunc {
  "/"
}
enum BoolFunc {
  "==", ">", "<"
}

value Table {
  col: int;
  row: int;
  head: int;
  content: int;
}

value Empty;

# Next, specify the input/output of the synthesized program
program Morpheus(Table) -> Table;

# Finally, specify the production rules
func empty: Empty -> Empty;

func select: Table r -> Table a, ColList b {
  row(r) == row(a);
  col(r) < col(a);
}